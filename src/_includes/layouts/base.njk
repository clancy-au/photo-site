<!doctype html><html lang="en"><head>

{# Pre-calculate gallery images for Open Graph tags if in a gallery page #}
{% if page.url.startsWith('/galleries/') and not gallery %}
  {% set gallerySlug = page.fileSlug or page.url | replace('/galleries/','') | replace('/','') %}
  {% if galleryImages[gallerySlug] %}
    {% set gallery = galleryImages[gallerySlug] %}
  {% endif %}
{% endif %}

<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
<title>{{ title or site.title or "Site" }}</title>
<link rel="stylesheet" href="/assets/css/styles.css">
<link rel="stylesheet" href="/assets/css/justified-gallery.css">

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website">
<meta property="og:url" content="{{ site.url }}{{ page.url }}">
<meta property="og:title" content="{{ title or site.title }}">
<meta property="og:description" content="{{ description or site.tagline }}">
{%- if featured_image -%}
  <meta property="og:image" content="{{ site.url }}{{ featured_image }}">
{%- elif gallery and gallery.length -%}
  {# Fix URL path - gallery URLs from galleryImages.js are missing /images/ directory #}
  {% set galleryImage = gallery[0].url | replace('/galleries/', '/galleries/images/') %}
  <meta property="og:image" content="{{ site.url }}{{ galleryImage }}">
{%- else -%}
  <meta property="og:image" content="{{ site.url }}/images/covers/site-default.jpg">
{%- endif -%}

<!-- Twitter / X Card -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:url" content="{{ site.url }}{{ page.url }}">
<meta name="twitter:title" content="{{ title or site.title }}">
<meta name="twitter:description" content="{{ description or site.tagline }}">
{%- if featured_image -%}
  <meta name="twitter:image" content="{{ site.url }}{{ featured_image }}">
{%- elif gallery and gallery.length -%}
  {# Fix URL path - gallery URLs from galleryImages.js are missing /images/ directory #}
  {% set galleryImage = gallery[0].url | replace('/galleries/', '/galleries/images/') %}
  <meta name="twitter:image" content="{{ site.url }}{{ galleryImage }}">
{%- else -%}
  <meta name="twitter:image" content="{{ site.url }}/images/covers/site-default.jpg">
{%- endif -%}
</head><body class="dark">
	<header class="site-header">
		<h1><a class="brand" href="/">{{ site.title or "Clancy Malcolm Photography" }}</a></h1>
		<nav class="site-nav">
			{% for item in site.nav %}
			  <a href="{{ item.href }}">{{ item.label }}</a>{% if not loop.last %} <span aria-hidden="true" class="sep">|</span> {% endif %}
			{% endfor %}
		</nav>
	</header>

  <!-- Standard favicon -->
  <link rel="icon" href="/final-favicon.ico" sizes="any">
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/final-favicon-32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/final-favicon-16.png">

  <!-- Larger icons -->
  <link rel="icon" type="image/png" sizes="48x48" href="/assets/favicon/final-favicon-48.png">
  <link rel="icon" type="image/png" sizes="64x64" href="/assets/favicon/final-favicon-64.png">
  <link rel="icon" type="image/png" sizes="128x128" href="/assets/favicon/final-favicon-128.png">
  <link rel="icon" type="image/png" sizes="192x192" href="/assets/favicon/final-favicon-192.png">
  <link rel="icon" type="image/png" sizes="256x256" href="/assets/favicon/final-favicon-256.png">
  <link rel="icon" type="image/png" sizes="512x512" href="/assets/favicon/final-favicon-512.png">

  <!-- Apple touch icon -->
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/final-favicon-180.png">

<main>{{ content | safe }}</main>

<!-- Lightbox Modal -->
<div id="lightbox" class="lightbox" style="display: none;" role="dialog" aria-modal="true" aria-labelledby="lightbox-caption">
  <div class="lightbox-backdrop"></div>
  <div class="lightbox-content">
    <button class="lightbox-close" aria-label="Close lightbox">&times;</button>
    <img class="lightbox-image" src="" alt="">
    <div class="lightbox-info">
      <div class="lightbox-caption" id="lightbox-caption"></div>
      <div class="lightbox-exif"></div>
    </div>
  </div>
</div>

<footer class="site-footer"><p>© {{ "now" | date("yyyy") }} {{ site.author or "Clancy Malcolm" }}</p></footer>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const lightbox = document.getElementById('lightbox');
  const lightboxImage = lightbox.querySelector('.lightbox-image');
  const lightboxCaption = lightbox.querySelector('.lightbox-caption');
  const lightboxExif = lightbox.querySelector('.lightbox-exif');
  const lightboxClose = lightbox.querySelector('.lightbox-close');
  const lightboxBackdrop = lightbox.querySelector('.lightbox-backdrop');
  
  // Ensure the lightbox is a direct child of <body> (iOS fixed-position quirk)
  if (lightbox.parentElement !== document.body) {
    document.body.appendChild(lightbox);
  }
  
  // Open lightbox
  document.addEventListener('click', function(e) {
    // Check if clicking on justified gallery item or any child
    const galleryItem = e.target.closest('.justified-gallery-item');
    if (galleryItem) {
      e.preventDefault();
      
      // Find the trigger element - either the item itself or a child with lightbox-trigger class
      const trigger = galleryItem.classList.contains('lightbox-trigger') ? 
                      galleryItem : 
                      galleryItem.querySelector('.lightbox-trigger') || galleryItem; // Fallback to gallery item if no trigger found
      
      // Extract image data
      const src = trigger.getAttribute('data-src') || trigger.dataset.src;
      const caption = trigger.getAttribute('data-caption') || trigger.dataset.caption;
      const camera = trigger.dataset.camera;
      const lens = trigger.dataset.lens;
      const focalLength = trigger.dataset.focalLength;
      const aperture = trigger.dataset.aperture;
      const shutterSpeed = trigger.dataset.shutterSpeed;
      const iso = trigger.dataset.iso;
      const dateTime = trigger.dataset.dateTime;
      
      if (src) {
        lightboxImage.src = src;
        lightboxImage.alt = caption || '';
        lightboxCaption.textContent = caption || '';
        
        // Build EXIF info
        const exifItems = [];
        if (camera) exifItems.push(camera);
        if (lens) exifItems.push(lens);
        if (focalLength) exifItems.push(focalLength);
        if (aperture) exifItems.push(aperture);
        if (shutterSpeed) exifItems.push(shutterSpeed);
        if (iso) exifItems.push(`ISO ${iso}`);
        
        let exifHTML = '';
        if (exifItems.length > 0) {
          exifHTML += '<div class="exif-data">' + exifItems.join(' • ') + '</div>';
        }
        if (dateTime) {
          exifHTML += '<div class="exif-date">Captured ' + dateTime + '</div>';
        }
        
        lightboxExif.innerHTML = exifHTML;

        lightbox.style.display = 'flex';

        // iOS-friendly scroll lock: fix body to current scroll position
        const scrollY = window.scrollY || document.documentElement.scrollTop || 0;
        document.body.dataset.scrollY = String(scrollY);
        document.body.style.position = 'fixed';
        document.body.style.top = `-${scrollY}px`;
        document.body.style.width = '100%';

        // Focus management
        lightboxClose.focus();
      }
    }
  });
  
  // Close lightbox
  function closeLightbox() {
    lightbox.style.display = 'none';
    // Restore scroll lock
    const y = parseInt(document.body.dataset.scrollY || '0', 10);
    document.body.style.position = '';
    document.body.style.top = '';
    document.body.style.width = '';
    document.body.style.overflow = '';
    window.scrollTo(0, y);
  }
  
  lightboxClose.addEventListener('click', closeLightbox);
  lightboxBackdrop.addEventListener('click', closeLightbox);
  
  // Close on Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && lightbox.style.display === 'flex') {
      closeLightbox();
    }
  });
});
</script>

<script src="/assets/js/justified-gallery.js"></script>
</body></html>
